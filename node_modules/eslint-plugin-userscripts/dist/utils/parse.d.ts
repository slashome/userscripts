import { SourceCode } from 'eslint';

interface Line {
    value: string;
    lineLoc: SourceLocation;
    codeBetween: boolean;
    end: boolean;
    start: boolean;
    invalid: boolean;
}
interface SourceLocation {
    source?: string | null;
    start: Position;
    end: Position;
}
interface Position {
    /** 1-based */
    line: number;
    /** 0-based */
    column: number;
}
interface ParsingResult {
    /**
     * Whether the metadata has ended
     */
    end: boolean;
    /**
     * The location of the starting of the metadata
     */
    enteredMetadata: number;
    /**
     * The lines of the metadata
     */
    lines: ((Line & {
        metadataInfo: true;
        metadataValue: {
            key: string;
            value: string;
        };
    }) | (Line & {
        metadataInfo: false;
    }))[];
}
/**
 * Parses the UserScript metadata from the source code
 *
 * @param sourceCode The ESLint source code object
 * @returns {ParsingResult} The parsing result
 */
declare function parse(sourceCode: SourceCode): ParsingResult;

export { type ParsingResult, type Position, type SourceLocation, parse };
