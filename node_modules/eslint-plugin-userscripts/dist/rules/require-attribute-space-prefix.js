"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var require_attribute_space_prefix_exports = {};
__export(require_attribute_space_prefix_exports, {
  default: () => require_attribute_space_prefix_default
});
module.exports = __toCommonJS(require_attribute_space_prefix_exports);
var import_parse = require("../utils/parse");
var require_attribute_space_prefix_default = {
  meta: {
    type: "suggestion",
    docs: {
      description: "ensure atributes are prefixed by a space",
      category: "Possible Errors"
    },
    messages: {
      attributeNotPrefixedBySpace: "Attributes should be prefixed by a space"
    },
    schema: []
  },
  create: (context) => {
    const sourceCode = context.sourceCode;
    const result = (0, import_parse.parse)(sourceCode);
    for (const line of result.lines) {
      if (line.metadataInfo) {
        const trimmedLine = line.value.trim();
        if (trimmedLine.startsWith("//") && trimmedLine.slice(2).trim().startsWith("@") && // doesn't start with a space or starts with 2 spaces
        (!trimmedLine.startsWith("// ") || trimmedLine.startsWith("//  "))) {
          context.report({
            loc: line.lineLoc,
            messageId: "attributeNotPrefixedBySpace"
          });
        }
      }
    }
    return {};
  }
};
