"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var require_description_exports = {};
__export(require_description_exports, {
  default: () => require_description_default
});
module.exports = __toCommonJS(require_description_exports);
var import_createValidator = require("../utils/createValidator");
const descriptionReg = /^description(:\S+)?$/;
var require_description_default = (0, import_createValidator.createValidator)({
  name: "description",
  required: true,
  validator: ({ attrVal, context }) => {
    const iteratedKeyNames = /* @__PURE__ */ new Set();
    for (const attrValue of attrVal) {
      if (iteratedKeyNames.has(attrValue.key)) {
        context.report({
          loc: attrValue.loc,
          messageId: "multipleDescriptions"
        });
      } else {
        iteratedKeyNames.add(attrValue.key);
      }
    }
  },
  messages: {
    multipleDescriptions: "Include only one description for each language"
  },
  regexMatch: descriptionReg,
  runOnce: true
});
